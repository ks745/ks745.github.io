---
title: "Linear model"
format: 
  html: 
    highlight-style: dracula
---

```{r}
library(tidyverse)

#read in the data
data <- readr::read_csv(here::here('data/barbenheimr.csv'))

#view the codebook
codebook <- readr::read_csv(here::here('data/codebook.csv'), show_col_types = F)
```

## Creating a linear model

```{r}
barbie_lm <- lm(barbie_rating ~ mental_age,
                data = data)
barbie_lm
```

### To get overall model fit

```{r}
broom::glance(barbie_lm) |> 
  knitr::kable(digits = 3)
```

### To get model parameters

```{r}
broom::tidy(barbie_lm) |> 
  knitr::kable(digits = 3)
```

## Comparing models using anova

```{r}
barbie_lm_full <- lm(barbie_rating ~ mental_age + sex, 
                     data = data)

anova(barbie_lm, barbie_lm_full) |> 
  broom::tidy()


```

## Standardized bs

standardized parameters tell us how many standard deviations the outcome changes by, when a predictor changes by one standard deviation

```{r}
parameters::model_parameters(barbie_lm_full, standardize = "refit") |> 
  knitr::kable(digits = 3)
```

## Robust parameter estimates

```{r}
#to get robust parameter estimates: 
lm_rob <- robust::lmRob(barbie_rating ~ mental_age + sex,
                               data = data)
summary(lm_rob)  

#to get robust CIs and p-values 
parameters::model_parameters(lm_rob, vcov = "HC4") |>    
  knitr::kable(digits = 3)  

#bootstrap method - for small samples 
parameters::model_parameters(lm_rob, bootstrap = TRUE) |>    
  knitr::kable(digits = 3)
```

## Omnibus tests of categorical predictors

```{r}
lm_omnibus <- lm(barbie_rating ~ employment_status, data = data)

anova(lm_omnibus) |> 
  parameters::model_parameters(effectsize = "omega") |> 
  knitr::kable(digits = 3)

broom::tidy(lm_omnibus, conf.int = TRUE) |>
  knitr::kable(digits = 3)
```
