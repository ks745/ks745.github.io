---
title: "Plots"
format: 
  html: 
    highlight-style: dracula
---

```{r}
library(tidyverse)

#read in the data
data <- readr::read_csv(here::here('data/barbenheimr.csv'))

#view the codebook
codebook <- readr::read_csv(here::here('data/codebook.csv'), show_col_types = F)

pupluv_tib <- readr::read_csv("https://www.discovr.rocks/csv/puppy_love.csv") |>
  dplyr::mutate(
    dose = forcats::as_factor(dose)
  )
```

## Scatterplots

```{r}
library(ggplot2)
data |> 
  ggplot(aes(x = ig_followers, y = annual_income)) +
  geom_point(position = "jitter", alpha = .4, colour = "darkcyan") +
  scale_x_continuous(limits = c(0,3000),
                     breaks = seq(0,3000, by = 500),
                     name = "Insta followers") +
  scale_y_continuous(limits = c(0,125000),
                     breaks = seq(0,125000, by = 25000),
                     name = "Annual income") +
  #or for labels could do:
  #labs(x = "Insta followers", y = "Annual income")
  theme_bw()


#another example - using colour
ggplot2::ggplot(pupluv_tib, aes(x = puppy_love, y = happiness, colour = dose, fill = dose)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  coord_cartesian(ylim = c(0, 10)) +
  scale_x_continuous(breaks = 0:7) +
  scale_y_continuous(breaks = 0:10) +
  labs(x = "Puppy love (0-7)", y = "Happiness (0-10)", colour = "Treatment", fill = "Treatment") +
  theme_minimal()
```

## Violin plots

```{r}
ggplot2::ggplot(data, aes(employment_status, annual_income)) +
  geom_violin() +
  stat_summary(fun.data = "mean_cl_boot") +
  labs(x = "Employment Status", y = "Annual income") +
  theme_bw()


#another example - using colour
ggplot2::ggplot(pupluv_tib, aes(x = dose, y = happiness, colour = dose)) +
  geom_point(position = position_jitter(width = 0.1), alpha = 0.6) +
  geom_violin(alpha = 0.2) + 
  stat_summary(fun.data = "mean_cl_normal", geom = "pointrange", position = position_dodge(width = 0.9)) +
  coord_cartesian(ylim = c(0, 10)) +
  scale_y_continuous(breaks = 0:10) +
  labs(x = "Puppy therapy group", y = "Happiness (0-10)", colour = "Puppy therapy group") +
  theme_bw()
```

## GGally - ggscatmat() - visualising data

```{r}
GGally::ggscatmat(data, columns = c("age", "annual_income", "barbie_rating", "iq")) +
  theme_bw()
```

## Using cool colours

```{r}
# install.packages("MetBrewer")
library(MetBrewer)

ggplot(data, aes(x = employment_status, fill = employment_status)) +
  geom_bar() +
  labs(x = "Employment Status", y = "Count") +
  theme_bw() + 
  scale_fill_manual(values = 
                      met.brewer("Tam", 
                                 n = 5,
                                 type = "continuous"))
```

Options for MetBrewer: <https://www.blakerobertmills.com/my-work/met-brewer#:~:text=%7BMetBrewer%7D%20is%20an%20R%20package%20that%20provides%20color,18%20colorblind-friendly.%20Full%20documentation%20can%20be%20found%20here.>
