{
  "hash": "c903b5695ed7c150bbc538e4967c5e57",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Linear model\"\nformat: \n  html: \n    highlight-style: dracula\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\n#read in the data\ndata <- readr::read_csv(here::here('data/barbenheimr.csv'))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 1000 Columns: 15\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (4): ppt_id, sex, employment_status, birth_country\ndbl (11): age, annual_income, iq, ig_followers, twitter_followers, history_c...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n#view the codebook\ncodebook <- readr::read_csv(here::here('data/codebook.csv'), show_col_types = F)\n```\n:::\n\n\n\n## Creating a linear model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarbie_lm <- lm(barbie_rating ~ mental_age,\n                data = data)\nbarbie_lm\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = barbie_rating ~ mental_age, data = data)\n\nCoefficients:\n(Intercept)   mental_age  \n   3.132330    -0.001528  \n```\n\n\n:::\n:::\n\n\n\n### To get overall model fit\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbroom::glance(barbie_lm) |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n| r.squared| adj.r.squared| sigma| statistic| p.value| df|    logLik|      AIC|      BIC| deviance| df.residual| nobs|\n|---------:|-------------:|-----:|---------:|-------:|--:|---------:|--------:|--------:|--------:|-----------:|----:|\n|     0.001|             0| 1.205|     0.678|   0.411|  1| -1604.447| 3214.894| 3229.617| 1449.207|         998| 1000|\n\n\n:::\n:::\n\n\n\n### To get model parameters\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbroom::tidy(barbie_lm) |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term        | estimate| std.error| statistic| p.value|\n|:-----------|--------:|---------:|---------:|-------:|\n|(Intercept) |    3.132|     0.104|    30.225|   0.000|\n|mental_age  |   -0.002|     0.002|    -0.823|   0.411|\n\n\n:::\n:::\n\n\n\n## Comparing models using anova\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbarbie_lm_full <- lm(barbie_rating ~ mental_age + sex, \n                     data = data)\n\nanova(barbie_lm, barbie_lm_full) |> \n  broom::tidy()\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 2 × 7\n  term                          df.residual   rss    df  sumsq statistic p.value\n  <chr>                               <dbl> <dbl> <dbl>  <dbl>     <dbl>   <dbl>\n1 barbie_rating ~ mental_age            998 1449.    NA NA        NA      NA    \n2 barbie_rating ~ mental_age +…         997 1449.     1  0.414     0.285   0.594\n```\n\n\n:::\n:::\n\n\n\n## Standardized bs\n\nstandardized parameters tell us how many standard deviations the outcome changes by, when a predictor changes by one standard deviation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nparameters::model_parameters(barbie_lm_full, standardize = \"refit\") |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter   | Coefficient|    SE|   CI| CI_low| CI_high|      t| df_error|     p|\n|:-----------|-----------:|-----:|----:|------:|-------:|------:|--------:|-----:|\n|(Intercept) |      -0.017| 0.045| 0.95| -0.106|   0.071| -0.381|      997| 0.703|\n|mental_age  |      -0.026| 0.032| 0.95| -0.088|   0.036| -0.830|      997| 0.407|\n|sexmale     |       0.034| 0.063| 0.95| -0.090|   0.158|  0.534|      997| 0.594|\n\n\n:::\n:::\n\n\n\n## Robust parameter estimates\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#to get robust parameter estimates: \nlm_rob <- robust::lmRob(barbie_rating ~ mental_age + sex,\n                               data = data)\nsummary(lm_rob)  \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nrobust::lmRob(formula = barbie_rating ~ mental_age + sex, data = data)\n\nResiduals:\n     Min       1Q   Median       3Q      Max \n-2.12366 -1.04378 -0.04786  0.94477  2.02332 \n\nCoefficients:\n             Estimate Std. Error t value Pr(>|t|)    \n(Intercept)  3.112226   0.110610  28.137   <2e-16 ***\nmental_age  -0.001540   0.001862  -0.827    0.408    \nsexmale      0.040699   0.076475   0.532    0.595    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.313 on 997 degrees of freedom\nMultiple R-Squared: 0.0009639 \n\nTest for Bias:\n            statistic p-value\nM-estimate      7.601 0.05502\nLS-estimate   -98.812 1.00000\n```\n\n\n:::\n\n```{.r .cell-code}\n#to get robust CIs and p-values \nparameters::model_parameters(lm_rob, vcov = \"HC4\") |>    \n  knitr::kable(digits = 3)  \n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The `vcov` argument of the `insight::get_varcov()` function is not yet\n  supported for models of class `lmRob`.\nWarning: The `vcov` argument of the `insight::get_varcov()` function is not yet\n  supported for models of class `lmRob`.\nWarning: The `vcov` argument of the `insight::get_varcov()` function is not yet\n  supported for models of class `lmRob`.\n```\n\n\n:::\n\n::: {.cell-output-display}\n\n\n|Parameter   | Coefficient|    SE|   CI| CI_low| CI_high|      t| df_error|     p|\n|:-----------|-----------:|-----:|----:|------:|-------:|------:|--------:|-----:|\n|(Intercept) |       3.112| 0.111| 0.95|  2.895|   3.329| 28.137|      997| 0.000|\n|mental_age  |      -0.002| 0.002| 0.95| -0.005|   0.002| -0.827|      997| 0.408|\n|sexmale     |       0.041| 0.076| 0.95| -0.109|   0.191|  0.532|      997| 0.595|\n\n\n:::\n\n```{.r .cell-code}\n#bootstrap method - for small samples \nparameters::model_parameters(lm_rob, bootstrap = TRUE) |>    \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter   | Coefficient|   CI| CI_low| CI_high|  p|\n|:-----------|-----------:|----:|------:|-------:|--:|\n|(Intercept) |       3.143| 0.95|  3.143|   3.143|  0|\n|mental_age  |      -0.003| 0.95| -0.003|  -0.003|  0|\n|sexmale     |      -0.023| 0.95| -0.023|  -0.023|  0|\n\n\n:::\n:::\n\n\n\n## Omnibus tests of categorical predictors\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlm_omnibus <- lm(barbie_rating ~ employment_status, data = data)\n\nanova(lm_omnibus) |> \n  parameters::model_parameters(effectsize = \"omega\") |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter         | Sum_Squares|  df| Mean_Square|     F|     p|\n|:-----------------|-----------:|---:|-----------:|-----:|-----:|\n|employment_status |       3.182|   4|       0.796| 0.547| 0.701|\n|Residuals         |    1447.009| 995|       1.454|    NA|    NA|\n\n\n:::\n\n```{.r .cell-code}\nbroom::tidy(lm_omnibus, conf.int = TRUE) |>\n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term                           | estimate| std.error| statistic| p.value| conf.low| conf.high|\n|:------------------------------|--------:|---------:|---------:|-------:|--------:|---------:|\n|(Intercept)                    |    3.104|     0.108|    28.777|   0.000|    2.892|     3.316|\n|employment_statuspart_time     |   -0.074|     0.134|    -0.552|   0.581|   -0.336|     0.189|\n|employment_statusself_employed |   -0.051|     0.133|    -0.384|   0.701|   -0.311|     0.209|\n|employment_statusstudent       |   -0.111|     0.131|    -0.853|   0.394|   -0.368|     0.145|\n|employment_statusunemployed    |    0.065|     0.151|     0.432|   0.666|   -0.231|     0.362|\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}