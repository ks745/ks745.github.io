{
  "hash": "40efd27fa629900b9319547e6c7cd31d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Contrast Coding\"\nformat: \n  html: \n    highlight-style: dracula\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.0.4     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nstar <- readr::read_csv(\"https://drmankin.github.io/disc_stats/star.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 2161 Columns: 48\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (28): gender, ethnicity, birth, stark, star1, star2, star3, lunchk, lunc...\ndbl (20): readk, read1, read2, read3, mathk, math1, math2, math3, experience...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nstar <- dplyr::mutate(star, dplyr::across(dplyr::starts_with(\"star\"), forcats::as_factor))\n```\n:::\n\n\n\n## Checking levels\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlevels(star$star2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"small\"        \"regular\"      \"regular+aide\"\n```\n\n\n:::\n\n```{.r .cell-code}\n#if you need to relevel:\n\nstar <- star |> \n  dplyr::mutate(\n    star2 = forcats::fct_relevel(star2, \"small\", \"regular\", \"regular+aide\")\n  )\n```\n:::\n\n\n\n## Contrast coding\n\n1.  **\"Regular\" class type** vs both **\"small\" and \"regular with aide\"**\n\n2.  **\"Small\"** vs **\"regular with aide\"**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nregular_vs_others <- c(-1/3, 2/3, -1/3)\nsmall_vs_aide <- c(1/2, 0, -1/2)\n\ncontrasts(star$star2) <- cbind(regular_vs_others, small_vs_aide)\n\ncontrasts(star$star2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n             regular_vs_others small_vs_aide\nsmall               -0.3333333           0.5\nregular              0.6666667           0.0\nregular+aide        -0.3333333          -0.5\n```\n\n\n:::\n:::\n\n\n\nfit linear model with contrast coding\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstar_lm <- lm(math2 ~ star2, data = star)\n\nanova(star_lm) |> \n  parameters::model_parameters(effectsize_type = \"omega\") |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|Parameter | Sum_Squares|   df| Mean_Square|     F|     p|\n|:---------|-----------:|----:|-----------:|-----:|-----:|\n|star2     |    11345.83|    2|    5672.917| 3.052| 0.047|\n|Residuals |  4011348.97| 2158|    1858.827|    NA|    NA|\n\n\n:::\n\n```{.r .cell-code}\nbroom::tidy(star_lm, conf.int = TRUE) |> \n  knitr::kable(digits = 3)\n```\n\n::: {.cell-output-display}\n\n\n|term                   | estimate| std.error| statistic| p.value| conf.low| conf.high|\n|:----------------------|--------:|---------:|---------:|-------:|--------:|---------:|\n|(Intercept)            |  594.656|     0.933|   637.477|   0.000|  592.827|   596.485|\n|star2regular_vs_others |   -4.754|     2.047|    -2.323|   0.020|   -8.768|    -0.741|\n|star2small_vs_aide     |    1.691|     2.204|     0.767|   0.443|   -2.632|     6.013|\n\n\n:::\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}